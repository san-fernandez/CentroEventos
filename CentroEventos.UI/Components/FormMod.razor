@rendermode InteractiveServer
@if (_visible && P != null)
{
    <EditForm Model="P" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <h3 class="mt-3">
            Se va a modificar la Persona ID: @P.Id
        </h3>

        <div class="form-group mt-2">
            <label>DNI</label>
            <InputText class="form-control" @bind-Value="P.DNI" />
        </div>

        <div class="form-group mt-2">
            <label>Nombre</label>
            <InputText class="form-control" @bind-Value="P.Nombre" />
        </div>

        <div class="form-group mt-2">
            <label>Apellido</label>
            <InputText class="form-control" @bind-Value="P.Apellido" />
        </div>

        <div class="form-group mt-2">
            <label>Tel√©fono</label>
            <InputText class="form-control" @bind-Value="P.Telefono" />
        </div>

        <div class="form-group mt-2">
            <label>Email</label>
            <InputText class="form-control" @bind-Value="P.Email" />
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-success me-2">Confirmar</button>
            <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
        </div>
    </EditForm>
}


@code {
    public Persona? P { get; set; }

    private bool _visible = false;

     public EventCallback<Persona> OnConfirmado { get; set; }

    public void Mostrar() {
        _visible = true;
        StateHasChanged();
    }

    void Guardar() {
        _visible = false;
        OnConfirmado.InvokeAsync(P);
    }

    void Cancelar() {
        _visible = false;
    }
}
