@rendermode InteractiveServer

@if (_visible && _eventoEditado != null)
{
    <EditForm Model="_eventoEditado" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <h3 class="mt-3">
            Se va a modificar el Evento ID: @_eventoEditado.Id
        </h3>

        <div class="form-group mt-2">
            <label>Nombre Evento</label>
            <InputText class="form-control" @bind-Value="_eventoEditado.Nombre" />
        </div>

        <div class="form-group mt-2">
            <label>Fecha/hora Inicio</label>
            <InputDate class="form-control" @bind-Value="_eventoEditado.FechaHoraInicio" />
        </div>

        <div class="form-group mt-2">
            <label>Duracion (hs)</label>
            <InputNumber class="form-control" @bind-Value="_eventoEditado.DuracionHoras" />
        </div>

        <div class="form-group mt-2">
            <label>Cupo Maximo</label>
            <InputNumber class="form-control" @bind-Value="_eventoEditado.CupoMaximo" />
        </div>

        <div class="form-group mt-2">
            <label>ID del Responsable</label>
            <InputNumber class="form-control" @bind-Value="_eventoEditado.ResponsableId" />
        </div>

        <div class="form-group mt-2">
            <label>Descripcion</label>
            <InputTextArea class="form-control" @bind-Value="_eventoEditado.Descripcion" />
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-success me-2">Confirmar</button>
            <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public EventoDeportivo? Eve { get; set; }

    private bool _visible = false;
    private EventoDeportivo? _eventoEditado;

    [Parameter]
    public EventCallback<EventoDeportivo> OnConfirmado { get; set; }

    public void Mostrar()
    {
        if (Eve == null)
        {
            Console.WriteLine("Error: El evento a editar es nulo.");
            return;
        }
        _eventoEditado = new EventoDeportivo
        {
            Id = Eve.Id,
            Nombre = Eve.Nombre,
            FechaHoraInicio = Eve.FechaHoraInicio,
            DuracionHoras = Eve.DuracionHoras,
            CupoMaximo = Eve.CupoMaximo,
            ResponsableId = Eve.ResponsableId,
            Descripcion = Eve.Descripcion
        };

        _visible = true;
        StateHasChanged();
    }

    void Guardar()
    {
        _visible = false;
        if (_eventoEditado != null)
        {
            OnConfirmado.InvokeAsync(_eventoEditado);
        }
    }

    void Cancelar()
    {
        _visible = false;
    }
}