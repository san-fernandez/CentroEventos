@page "/evento/asistentes/{idEvento:int}"
@rendermode InteractiveServer
@inject ListarAsistenciaAEventoUseCase ListarAsistencia
@inject NavigationManager Navigation

<h3>Asistentes al evento</h3>

@if (asistentes == null)
{
    <p>Cargando...</p>
}
else if (!asistentes.Any())
{
    <p>No hay asistentes para este evento.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>DNI</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var persona in asistentes)
            {
                <tr>
                    <td>@persona.Nombre</td>
                    <td>@persona.Apellido</td>
                    <td>@persona.DNI</td>
                </tr>
            }
        </tbody>
    </table>
    <br>
}

<button class="btn btn-secondary mt-2" @onclick="Volver">Volver al menÃº</button>
<DialogoConfirmacion @ref="dialogo" Mensaje="@error" />

@code {
    [Parameter] public int idEvento { get; set; }

    List<Persona>? asistentes = null;
    string error = "";
    DialogoConfirmacion dialogo = null!;

    protected override void OnInitialized()
    {
        try
        {
            asistentes = ListarAsistencia.Ejecutar(idEvento);
        }
        catch (Exception ex)
        {
            error = ex.Message;
            dialogo.Mostrar();
        }
    }
    void Volver() => Navigation.NavigateTo("/evento/listar");

}
