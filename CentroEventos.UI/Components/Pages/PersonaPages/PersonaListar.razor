@page "/persona/listar/"
@rendermode InteractiveServer
@using CentroEventos.UI.Components
@inject ListarPersonasUseCase ListPer
@inject PersonaBajaUseCase RemPer
@inject PersonaModificacionUseCase ModPer
@inject NavigationManager Navigation
@inject IServicioUsuarioSesion Sesion
@inject IJSRuntime JSRuntime

<FormMod @ref="form" />
<DialogoConfirmacion @ref="dialogo" Mensaje="@MensajeDialogo" MostrarEliminar="@MostrarEliminar" OnEliminar="ConfirmarEliminar" />

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>NOMBRE</th>
            <th>APELLIDO</th>
            <th>DNI</th>
            <th>TELEFONO</th>
            <th>EMAIL</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var p in _lista)
        {
            <tr>
                <td>@p.Id</td>
                <td>@p.Nombre</td>
                <td>@p.Apellido</td>
                <td>@p.DNI</td>
                <td>@p.Telefono</td>
                <td>@p.Email</td>
                <td>
                    <button class="btn btn-warning btn-sm me-1" @onclick="() => Modificar(p)">Editar</button>
                    <button class="btn btn-danger btn-sm" @onclick="() => MostrarDialogoEliminar(p)">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<button class="btn btn-secondary mt-2" @onclick="Volver">Volver al menú</button>

@code {
    List<Persona> _lista = new();
    DialogoConfirmacion dialogo = null!;
    FormMod form = null!;
    Persona? personaAEliminar;
    string MensajeDialogo = "";
    bool MostrarEliminar = false;

    protected override void OnInitialized()
    {
        _lista = ListPer.Ejecutar();
    }

    public void Modificar(Persona p)
    {
        form.OnConfirmado = EventCallback.Factory.Create<Persona>(this, GuardarCambios);
        form.P = p;
        form.Mostrar();
    }

    public void GuardarCambios(Persona p)
    {
        if (Sesion.UsuarioActual != null)
        {
            try
            {
                ModPer.Ejecutar(p, Sesion.UsuarioActual.Id);
                var index = _lista.FindIndex(x => x.Id == p.Id);
                if (index != -1)
                {
                    _lista[index] = p;
                }

                StateHasChanged();
            }
            catch (Exception ex)
            {
                MensajeDialogo = ex.Message;
                MostrarEliminar = false;
                dialogo.Mostrar();
            }
        }
        else
        {
            MensajeDialogo = "Debes iniciar sesión";
            MostrarEliminar = false;
            dialogo.Mostrar();
            Navigation.NavigateTo("/");
        }
    }


    public void MostrarDialogoEliminar(Persona p)
    {
        personaAEliminar = p;
        MensajeDialogo = $"¿Seguro que desea eliminar a {p.Nombre} {p.Apellido}?";
        MostrarEliminar = true;
        dialogo.Mostrar();
    }

    public void ConfirmarEliminar()
    {
        if (personaAEliminar != null)
        {
            if (Sesion.UsuarioActual != null)
            {
                try {
                    RemPer.Ejecutar(personaAEliminar.Id, Sesion.UsuarioActual.Id);
                    _lista.Remove(personaAEliminar);
                    personaAEliminar = null;
                    StateHasChanged();
                }
                catch (Exception ex) {
                    MensajeDialogo = ex.Message;
                    MostrarEliminar = false;
                    dialogo.Mostrar();
                }
            }
            else
            {
                MensajeDialogo = "Debes iniciar sesión";
                MostrarEliminar = false;
                dialogo.Mostrar();
                Navigation.NavigateTo("/");
            }
        }
    }

    void Volver() => Navigation.NavigateTo("/home");
}
